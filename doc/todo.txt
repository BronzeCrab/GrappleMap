documentation:
- readme
- edit guidelines
- database format

db:
- cage/fence
- understand that for left-right symmetric positions, outgoing transition can follow incoming transitions in either mirrored or non-mirrored form (alternatively, we could have zero-length mirror transitions in these positions)

editor:
- more useful console output
- editing selected joints as a group
- draw torso with a single shape
- neck sticks out of sides of head
- add diagnostics for transitions or transition sequences that:
  * don't respect inertia
  * ice skate or hover
  * rotate joints in unnatural ways
  * move limbs through eachother
- maybe visually indicate where a body's structural mechanics are weak, which directions it could be off-balanced, etc

glfw frontend:
- in edit mode, auto-hide limbs that obstruct the edited joint
- make rotation commands rotate around center between players, not area center
- respect 'draggable' again(?)
- test clipboard
- restore remaining disabled commands

vrui frontend:
- limb editing
- integrate more tools into vr space: web browser, text editor, ...
- define tools properly
- position-in-sequence labels
- interface for inserting new transitions
- graph display
- update menu entries (e.g. only show one of insert/remove keyframe, and 'enable/disable blabla' instead of 'toggle blabla')
- write tutorial
- menu button for resetting navigation matrix
- allow dynamically unmapping tools
- support desktop mode where cursor is a ray
- video player reorientation, ideally using ordinary window decorations
- optionally couple video playback to selection position (so that if we have a real-time clip of a technique, we can copy the timing exactly)
- re-sync/seek video after adding/removing keyframes
- reorienting start/end positions is broken
- slider for video sync offset
- dialogs often open in weird place
- startup selection empty

playback:
- make {pre,post}fix length for demo mode configurable
- experiment with alternative ways to smooth animation, e.g. bezier curves. this should especially
  reduce the corner cutting of the current drag-based smoothing

vr playback:
- first person view
- dialog with options for things like "cycle through entries/continuations"

position pages:
- find a better tool/library for generating gifs (need more speed and compression) (Magick++ seems worth a try even though it's also ImageMagick..)
- maybe embed videos encoded with e.g. x264?
- nice urls for position pages
- investigate graphviz alternatives
- experiment with other/more colors
- in the graphs, it would be good to be able to tell really long and really short transitions apart
- make transition labels in graphviz graphs into composer links
- generate pics/diagrams in subdir

search page:
- only warp if node is unreachable
- extended info mode
- left/right keys should work in substring text box
- removing tag sometimes doesn't update query properly when there's substrings

explorer:
- find a way to get mouse events through to babylon, or at least mention that arrow keys rotate camera
- clickable position links?
- make sure selected node doesn't get lost when neighbours are unselected or killed
- when turning off edit mode, transition to selected node if necessary
- in edit mode, auto-kill distant nodes, so that you can keep exploring just by opening nodes
- find solution for multiple transitions between pair of nodes
- make zooming with scrollwheel work
- if nodes form a chain, make composer link load it as a drill
- show bidirectional transitions with bidirectional arrows
- when the cursor is over a transition, indicate the point on the line closest to the cursor, and guide the animation towards the exact interpolated position, so that moving the mouse smoothly animates smoothly
- see if using babylon's canvas2d for the graph helps

composer:
- speed dial
- fps and other metrics display
- leave animation undisturbed when manipulating drill
- first person camera jerky when sliding
- better layout for info checkbox and explorer link

new tools:
- diff, to visualize changes made to transitions
- transition editor in browser (looks like webassembly is coming soon)

misc:
- mobile-friendly versions of things
- clean up code (a lot)
- get webserver to compress transitions (saves 70%)
- for each transition, generate a file containing its frames, so that the web pages can request only what they need instead of loading everything
- generate lightweight db summary file that only contains position data for nodes, for use by e.g. search page
- precompile util.hpp

binary packages:
- maybe make a dockerfile for the crosscompile env
- unrecognized options turn into hard crashes on win32, so it looks like exception handling isn't working
- generate apple stuff
- get ftgl to work (or something else for text)
